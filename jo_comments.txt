Regarding the subpackage: torchfl.datamodules.
    - cifar.py: There are some comments in funtions setup(), federated_iid_dataloader(), federated_non_iid_dataloader()
            These comments concern, also the corresponding functions in fashionmnist.py and emnist.py. 
    - in cifar.py, emnist.py, fashionmnist.py class: DatasetSplit is the same? 
            - IDEA: for sake of simplisity create a file to contain the DatasetSplit and 
              import it to the aforementioned files.
    - The same for functions (federated_iid/federated_non_iid)_dataloader for cifar/emnist/fashionmnist 
      are the same... why not but them to another file and import them.
    - Can you explain how you distribute data in the non_iid?
    
- Regarding the documentation:
A small description at the begging of subpackages: torchfl.models.core/wrapper/sota
        - you could mention the purpose of each package, the abstract idea of their structure,
        and maybe how they are connected to each other.
For example you should start with the torchfl.models.sota package and explain that inside that you
create the classes that hold the implementation of networks and then inside core you create objects of the sota
class, that fit the corresponding data-set.
NOTE: this explanation should be small and you can include it in the readme --> pending: I will prepare an example for you.
- You should include one small explanation about the annotations balanced, byclass, bymerge etc inside core.emnist

    