[tool.black]
line-length = 79

[tool.pycln]
all = true

[tool.isort]
profile = "black"
line_length = 79
known_first_party = ["torchfl"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disable_error_code = ["attr-defined"]

[[tool.mypy.overrides]]
# Add all the modules with missing type stubs here.
module = [
    "torchvision.*"
    ]
ignore_missing_imports = true

[tool.doc8]
max-line-length = 79
sphinx = true

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = [
  "B",
  "C4",
  "E7", "E9",
  "EXE",
  "I",
  "ICN",
  "W",
  "F",
  "PT",
  "RUF",
  # uncomment below line when new ruff is bundled in vscode extension
  # "SIM",
  "UP",
]
ignore = ["EXE001", "I001", "B008"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "UP", "PT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 79

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
